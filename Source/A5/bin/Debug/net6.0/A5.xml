<?xml version="1.0"?>
<doc>
    <assembly>
        <name>A5</name>
    </assembly>
    <members>
        <member name="M:A5.Controller.AwardController.RaiseRequest(A5.Models.Award)">
             <summary>
              This Method is used to raise request for Awardee
             </summary>
             <remarks>
             Sample request:
            
                 POST / RaiseRequest
                 {
                    "requesterId": 11,
                    "awardeeId": 8,
                    "awardTypeId": 2,
                    "reason": "Best Performer",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="award">String</param>
             <returns>
            Return true when the request is added in the database otherwise return "sorry internal error is occured"
             </returns>
        </member>
        <member name="M:A5.Controller.AwardController.Approval(A5.Models.Award)">
             <summary>
              This Method is used to Approve or reject the request by Approver
             </summary>
             <remarks>
             Sample request:
            
                 PUT / Approve or reject by Approver
                 {
                    "requesterId": 11,
                    "awardeeId": 8,
                    "awardTypeId": 2,
                    "approverId": 5,
                    "reason": "Best Performer",
                    "statusId": 3,
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="award">String</param>
             <returns>
            Return the true whether the request getting approved or rejected otherwise it show "sorry internal error occured"  
             </returns>
        </member>
        <member name="M:A5.Controller.AwardController.GetAwardById(System.Int32)">
             <summary>
              This Method is used to get the details about the Specific Awardee by id whether he/she is getting Approved or rejected or published
             </summary>
             <remarks>
             Sample request:
            
                 GET / Awardee status by id
                 {
                    AwardeeId = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return the informations and status about the specific Awardee 
             </returns>
        </member>
        <member name="M:A5.Controller.AwardController.GetAwardsList(System.Int32)">
             <summary>
              This Method is used to get all awardees including pending Awardees, Approved Awardees, Rejected Awardees, published Awardees
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetAwardsList
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Awardees who are in the status of pending, Approved, rejected, published
             </returns>
        </member>
        <member name="M:A5.Controller.AwardController.AddComment(A5.Models.Comment)">
             <summary>
              This Method is used to Add comments for an Awardee who is getting an award
             </summary>
             <remarks>
             Sample request:
            
                 POST / AddComment
                 { 
                    "comments": "congrats aravinth",
                    "employeeId": 6,
                    "awardId": 1,
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="comment">String</param>
             <returns>
            Return 
             </returns>
        </member>
        <member name="M:A5.Controller.AwardController.GetComments(System.Int32)">
             <summary>
              This Method is used to get comments of Specific awardee
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetComments
                 {
                    "awardId" = "1" 
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="awardId">String</param>
             <returns>
            Return the comments and some details of awardee 
             </returns>
        </member>
        <member name="M:A5.Controller.AwardTypeController.GetAll">
             <summary>
              This Method is used to view all Award Type
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewAwards
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Awards.
             </returns>
        </member>
        <member name="M:A5.Controller.AwardTypeController.GetById(System.Int32)">
             <summary>
              This Method is used to view single Award by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleAward
                 {
                    "AwardId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns signle Award by id
             </returns>
        </member>
        <member name="M:A5.Controller.AwardTypeController.Create(A5.Models.AwardType)">
             <summary>
              This Method is used to create new Award
             </summary>
             <remarks>
             Sample request:
            
                 POST / CreateAward
                 {
                    "awardName": "First Victor",
                    "awardDescription": "Good Performer",
                    "imageString": ""
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="awardType">String</param>
             <returns>
            Return "Award Added Successfully" when the AwardType is added in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.AwardTypeController.Update(A5.Models.AwardType)">
             <summary>
              This Method is used to update award by id
             </summary>
             <remarks>
             Sample request:
            
                 PUT / UpdateAwardType
                 {
                    "id" : 1;
                    "awardName": "First Victor",
                    "awardDescription": "Good Performer",
                    "imageString": ""
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="awardType">String</param>
             <returns>
            Returns the updated data of AwardType
             </returns>
        </member>
        <member name="M:A5.Controller.AwardTypeController.Disable(System.Int32)">
             <summary>
              This Method is used to disable the Award by id
             </summary>
             <remarks>
             Sample request:
            
                 PUT / DisableAward
                 {
                    "AwardTypeId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return "Award Disabled Successfully" message when the isactive filed is set to 0 otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.GetAllDepartment">
             <summary>
              This Method is used to view all department
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewDepartment
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Departments.
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.GetDepartmentsByOrganisationId(System.Int32)">
             <summary>
              This Method is used to view All departments which are comes under one organisation.
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewDepartmentsByOrganisationId
                 {
                    "OrganisationId" = "1",   
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response>
             <param name="id">String</param>
             <returns>
            Returns List of Departments from OrganisationId
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.GetDepartmentById(System.Int32)">
             <summary>
              This Method is used to view single Departmnet by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleDepartment
                 {
                    "DepartmentId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns signle Department by id
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.Create(A5.Models.Department)">
             <summary>
              This Method is used to create new department under corresponding organisation
             </summary>
             <remarks>
             Sample request:
            
                 POST / CreateDepartment
                 {
                    "departmentName" = "Dotnet",
                    "organisationId" = "2",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="department">String</param>
             <returns>
            Return true when the Department is added in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.Update(A5.Models.Department)">
             <summary>
              This Method is used to Edit Department name by organisationid
             </summary>
             <remarks>
             Sample request:
            
                 GET / Update
                 {
                    "id": 7,
                    "departmentName": "End Testing",
                    "organisationId": 3,
                    "addedBy": 1,
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="department">String</param>
             <returns>
            Returns updated name of department
             </returns>
        </member>
        <member name="M:A5.Controller.DepartmentController.Disable(System.Int32)">
             <summary>
              This Method is used to disable the Department by id from OrganisationId
             </summary>
             <remarks>
             Sample request:
            
                 PUT / DisableDepartment
                 {
                    "DepartmentId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return true message when the isactive filed is set to 0 in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.GetAllDesignation">
             <summary>
              This Method is used to view all designation
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewDesignation
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Designation.
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.GetDesignationsByDepartmentId(System.Int32)">
             <summary>
              This Method is used to view All designation which are comes under one Department.
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewDesignationsByDepartmentId
                 { 
                    "DesignationId" = "3",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns List of Designations from DepartmentId
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.GetDesignationById(System.Int32)">
             <summary>
              This Method is used to view single Designation by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleDesignation
                 {
                    "DesignationId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns signle Designation by id
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.Create(A5.Models.Designation)">
             <summary>
              This Method is used to create new designation under corresponding department
             </summary>
             <remarks>
             Sample request:
            
                 POST / CreateDesignation
                 {
                   "designationName": "Manager",
                   "roleId": 3,
                   "departmentId": 2,
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="designation">String</param>
             <returns>
            Return true when the Designation is added in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.Update(A5.Models.Designation)">
             <summary>
              This Method is used to update single Designation by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / Update
                 {
                    "DesignationId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="designation">String</param>
             <returns>
            Returns the updated signle Designation by id
             </returns>
        </member>
        <member name="M:A5.Controller.DesignationController.Disable(System.Int32)">
             <summary>
              This Method is used to disable the Designation by id from DepartmentId
             </summary>
             <remarks>
             Sample request:
            
                 PUT / DisableDesignation
                 {
                    "DesignationId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return "Designation Disabled Successfully" message when the isactive filed is set to 0 otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetAllEmployees">
             <summary>
              This Method is used to view all Employees
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewEmployees
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Employees.
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetEmployeeById(System.Int32)">
             <summary>
              This Method is used to view single Employee by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleEmployee
                 {
                    "EmployeeId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns signle Employee by id
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.Create(A5.Models.Employee)">
             <summary>
              This Method is used to create new employee
             </summary>
             <remarks>
             Sample request:
            
                 POST / CreateEmployee
                 {
                    "ACEID" = "INT0987",
                    "FirstName" = "Sanajy",
                    "LastName" = "Subramani",
                    "Email" = "sanjay@gmail.com",
                    "image" = "",
                    "imageName" = "",
                    "Gender" = "Male",
                    "DOB" = "28-03-2002",
                    "OrganisationId" = "1",
                    "DepartmentId" = "3",
                    "DesignationId" = "6",
                    "ReportingPersonId" = "2",
                    "HRId" = "4",
                    "Password" = "SANJAY_SUBRAMANI0987",
                    "imageString" = "",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="employee">String</param>
             <returns>
            Return true when the Employee is added in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.Update(A5.Models.Employee)">
             <summary>
              This Method is used to Update single Employee by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / Update
                 {
                    "EmployeeId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="employee">String</param>
             <returns>
            Returns signle organisation by id
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.Disable(System.Int32)">
             <summary>
              This Method is used to disable the Employee by id
             </summary>
             <remarks>
             Sample request:
            
                 PUT / DisableEmployee
                 {
                    "EmployeeId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return "Employee Disabled Successfully" message when the isactive filed is set to 0 otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetReportingPersonByDepartment(System.Int32)">
             <summary>
              This Method is used to get all reporting persons under an department.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetReportingPersonByDepartment
                 {
                    "DepartmentId" = "1",    
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="departmentId">String</param>
             <returns>
            Returns List of Reporting persons from DepartmentId
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetHrByDepartment(System.Int32)">
             <summary>
              This Method is used to get all HR under an department.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetHrByDepartment
                 {
                    "DepartmentId" = "1",    
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="departmentId">String</param>
             <returns>
            Returns List of HR persons from DepartmentId
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetEmployeeByOrganisation(System.Int32)">
             <summary>
              This Method is used to view All Employees whose comes under one Organisation.
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewEmployeeByOrganisationId
                 {
                    "OrganisationId" = "2",   
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="organisationId">String</param>
             <returns>
            Returns List of Employees from OrganisationId
             </returns>
        </member>
        <member name="M:A5.Controller.EmployeeController.GetEmployeeByRequesterId(System.Int32)">
             <summary>
              This Method is used to view All Employees whose comes under one Requester.
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewEmployeeByRequesterId
                 {
                    "RequesterId" = "2",  
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="RequesterId">String</param>
             <returns>
            Returns List of Employees from RequesterId
             </returns>
        </member>
        <member name="M:A5.Controller.OrganisationController.GetAllOrganisation">
             <summary>
              This Method is used to view all organisation
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewOrganisation
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param>String</param>
             <returns>
            Return List of Organisation.
             </returns>
        </member>
        <member name="M:A5.Controller.OrganisationController.GetOrganisationById(System.Int32)">
             <summary>
              This Method is used to view single Organisation by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleOrganisation
                 {
                    "OrganisationId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Returns signle organisation by id
             </returns>
        </member>
        <member name="M:A5.Controller.OrganisationController.Create(A5.Models.Organisation)">
             <summary>
              This Method is used to create new organisation
             </summary>
             <remarks>
             Sample request:
            
                 POST / CreateOrganisation
                 {
                    "OrganisationName" = "Development",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="organisation">String</param>
             <returns>
            Return true when the Organisation is added in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.OrganisationController.Update(A5.Models.Organisation)">
             <summary>
              This Method is used to update single Organisation by id
             </summary>
             <remarks>
             Sample request:
            
                 GET / ViewSingleOrganisation
                 {
                    "OrganisationId" = "1",
                    "OrganisationName" = "Software Development"
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="organisation">String</param>
             <returns>
            Returns the updated name of signle organisation by id
             </returns>
        </member>
        <member name="M:A5.Controller.OrganisationController.Disable(System.Int32)">
             <summary>
              This Method is used to disable the organisation by id
             </summary>
             <remarks>
             Sample request:
            
                 PUT / DisableOrganisation
                 {
                    "OrganisationId" = "1",
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="id">String</param>
             <returns>
            Return true message when the isactive filed is set to 0 in the database otherwise return "Sorry internal error occured".
             </returns>
        </member>
        <member name="M:A5.Controller.RoleController.GetByRoleId(System.Int32)">
             <summary>
              This Method is used to view role by Id.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetById
                 {
                    "Id" = "2",  
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="roleId">String</param>
             <returns>
            Returns Role from Id
             </returns>
        </member>
        <member name="M:A5.Controller.RoleController.GetAll">
             <summary>
              This Method is used to view all role.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetAll
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param >String</param>
             <returns>
            Returns List of Role
             </returns>
        </member>
        <member name="M:A5.Controller.StatusController.GetByStatusId(System.Int32)">
             <summary>
              This Method is used to view status by Id.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetById
                 {
                    "Id" = "2",  
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param name="statusId">String</param>
             <returns>
            Returns status from Id
             </returns>
        </member>
        <member name="M:A5.Controller.StatusController.GetAllStatus">
             <summary>
              This Method is used to view all status.
             </summary>
             <remarks>
             Sample request:
            
                 GET / GetAll
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param >String</param>
             <returns>
            Returns List of Status
             </returns>
        </member>
        <member name="M:A5.Controller.TokenController.AuthToken(A5.Models.Login)">
             <summary>
              This Method is used to Generate Authtoken.
             </summary>
             <remarks>
             Sample request:
            
                 POST / AuthToken
                 {
                    "email": "",
                    "password": ""
                 }
            
             </remarks>
             <response code="201">Returns the newly created item</response>
             <response code="400">If the item is null</response> 
             <param >String</param>
             <returns>
            Returns token to authorize the Swagger to make run all methods 
             </returns>
        </member>
        <member name="T:A5.Hasher.PasswordHasher">
            hashed the password using key
        </member>
    </members>
</doc>
